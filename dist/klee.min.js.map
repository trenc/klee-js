{
  "version": 3,
  "sources": ["../src/modules/constants.js", "../src/default.options.js", "../src/utils.js", "../src/modules/app.js", "../src/modules/material.js", "../src/modules/userdata.js", "../src/modules/object3d.js", "../src/modules/scene.js", "../src/modules/controls.js", "../src/modules/loaders.js", "../src/modules/light.js", "../src/modules/geometry.js", "../src/modules/item.js", "../src/modules/dragging.js", "../src/modules/events.js", "../src/modules/collisions.js", "../src/klee.js"],
  "sourcesContent": ["const KLEEVERSION = '0.5.8';\n\nexport { KLEEVERSION };\n", "function getDefaultOptions (THREE) {\n\n\treturn {\n\n\t\tdebugLevel: 0, // 0,1,2,3\n\n\t\tresponsive: true,\n\n\t\trenderer: {\n\t\t\ttype: 'WebGLRenderer',\n\t\t\targs: [{ antialias: true, preserveDrawingBuffer: true, alpha: true }],\n\t\t\tdomElement: 'body',\n\t\t\tclearColor: '#000000',\n\t\t\topacity: 1,\n\t\t\tproperties: {\n\t\t\t\t// outputEncoding: THREE.sRGBEncoding,\n\t\t\t\tshadowMap: {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\ttype: THREE.PCFSoftShadowMap\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tcamera: {\n\t\t\ttype: 'PerspectiveCamera',\n\t\t\tmethods: {\n\t\t\t\tlookAt: [0, 0, 0]\n\t\t\t},\n\t\t\tproperties: {\n\t\t\t\tposition: { x: -1, y: 2, z: 5 },\n\t\t\t\tname: 'camera-1',\n\t\t\t\tfov: 35,\n\t\t\t\taspect: window.innerWidth / window.innerHeight,\n\t\t\t\tnear: 1,\n\t\t\t\tfar: 300\n\t\t\t}\n\t\t},\n\n\t\tscene: {\n\t\t\ttype: 'Scene',\n\t\t\tproperties: {\n\t\t\t\tname: 'scene-1',\n\t\t\t\tposition: { x: 0, y: 0, z: 0 }\n\t\t\t}\n\t\t}\n\n\t};\n\n}\n\nexport { getDefaultOptions };\n", "class Utils {\n\n\t// https://gist.github.com/ahtcx/0cd94e62691f539160b32ecda18af3d6\n\t// mutates target for read-only properties\n\tstatic merge (target, source) {\n\n\t\tif (!source || typeof source !== 'object') {\n\n\t\t\treturn target;\n\n\t\t}\n\n\t\tfor (const key of Object.keys(source)) {\n\n\t\t\tif (source[key] instanceof Object && typeof target[key] !== 'undefined' ) {\n\n\t\t\t\tObject.assign(source[key], this.merge(target[key], source[key]));\n\n\t\t\t}\n\n\t\t}\n\n\t\tObject.assign(target || {}, source);\n\n\t\treturn target;\n\n\t}\n\n\tstatic isThreeColorValue (string) {\n\n\t\tconst colorProperties = [\n\n\t\t\t'color',\n\t\t\t'specular',\n\t\t\t'emissive',\n\t\t\t'diffuse',\n\t\t\t'background',\n\t\t\t'sheen'\n\n\t\t];\n\n\t\treturn colorProperties.includes(string);\n\n\t}\n\n\tstatic applyMethods (object, methods) {\n\n\t\tmethods = methods || {};\n\n\t\tfor (const method in methods) {\n\n\t\t\tconst args = Array.isArray(methods[method]) ? methods[method] : [];\n\n\t\t\tif (!(method in object)) {\n\n\t\t\t\tconsole.log('Applied object has no method: ' + method);\n\n\t\t\t} else {\n\n\t\t\t\tobject[method](...args);\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n}\n\nexport { Utils };\n", "import { getDefaultOptions } from '../default.options';\nimport { Utils } from '../utils';\n\nconst App = (function () {\n\n\tlet options = {};\n\n\tlet THREE;\n\n\tconst local = {\n\n\t\tcanvas: null,\n\t\tcamera: null,\n\t\trenderer: null,\n\t\tscene: null,\n\t\tmouse: null,\n\t\traycaster: null,\n\t\tmanager: null,\n\t\tcontrols: {\n\t\t\tOrbitControls: null\n\t\t},\n\t\tmovingLimits: null,\n\t\tdraggables: [],\n\t\tdraggableObject: null,\n\t\tcollidables: [],\n\t\tactions: {\n\t\t\tisDragging: false\n\t\t}\n\n\t};\n\n\tfunction init (three, initOptions = {}) {\n\n\t\tif (!three || !three.REVISION) {\n\n\t\t\terror('THREE is not inserted');\n\n\t\t}\n\n\t\tTHREE = { ...three };\n\n\t\tif (!initOptions || typeof initOptions !== 'object') {\n\n\t\t\tinitOptions = {};\n\t\t\twarn('Options are set to default values');\n\n\t\t}\n\n\t\tconst mergedOptions = Utils.merge(getDefaultOptions(THREE), initOptions);\n\n\t\toptions = { ...mergedOptions };\n\n\t\tlocal.renderer = initRenderer(options.renderer);\n\n\t\tlocal.manager = new THREE.LoadingManager();\n\n\t}\n\n\tfunction run (callback) {\n\n\t\tlocal.renderer.render(local.scene, local.camera);\n\n\t\tif (local.controls.OrbitControls) {\n\n\t\t\tif (local.controls.OrbitControls.enableDamping || local.controls.OrbitControls.autoRotate) {\n\n\t\t\t\tlocal.controls.OrbitControls.update();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif (typeof callback === 'function') {\n\n\t\t\tcallback();\n\n\t\t}\n\n\t\trequestAnimationFrame(() => run(callback));\n\n\t}\n\n\tfunction initSize () {\n\n\t\tconst isResponsive = options.responsive || false;\n\t\tconst initialFov = local.camera.fov;\n\t\tconst initialWidth = local.canvas.clientWidth;\n\n\t\tlet width = local.canvas.clientWidth;\n\t\tlet height = local.canvas.clientHeight;\n\n\t\tlocal.renderer.setSize(width, height);\n\t\tlocal.camera.aspect = width / height;\n\t\tlocal.camera.updateProjectionMatrix();\n\n\t\tif (isResponsive === false) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst resizeObserver = new ResizeObserver((entry) => {\n\n\t\t\tconst wWidth = window.innerWidth;\n\n\t\t\twidth = local.canvas.clientWidth;\n\t\t\theight = local.canvas.clientHeight;\n\n\t\t\tif (wWidth !== width) {\n\n\t\t\t\tlocal.renderer.setSize(wWidth, height);\n\n\t\t\t\tlocal.camera.aspect = wWidth / height;\n\t\t\t\tlocal.camera.fov = initialFov * initialWidth / wWidth;\n\t\t\t\tlocal.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t});\n\n\t\tresizeObserver.observe(document.querySelector('body'));\n\n\t}\n\n\tfunction initRenderer (o) {\n\n\t\tlocal.domElement = document.querySelector(o.domElement);\n\n\t\tif (local.domElement instanceof HTMLCanvasElement) {\n\n\t\t\to.args.canvas = local.domElement;\n\t\t\tlocal.canvas = local.domElement;\n\n\t\t}\n\n\t\tlet renderer = createObject(o);\n\n\t\trenderer = applyRendererOptions(renderer, o.properties);\n\n\t\trenderer.setClearColor(new THREE.Color(o.clearColor), o.opacity);\n\t\trenderer.setPixelRatio(window.devicePixelRatio);\n\n\t\tif (!local.canvas) {\n\n\t\t\tlocal.domElement.appendChild(renderer.domElement);\n\t\t\tlocal.canvas = renderer.domElement;\n\n\t\t}\n\n\t\trenderer.setSize(local.canvas.clientWidth, local.canvas.clientHeight);\n\n\t\treturn renderer;\n\n\t}\n\n\tfunction createObject (o) {\n\n\t\tconst args = Array.isArray(o.args) ? o.args : [];\n\t\tconst object = new THREE[o.type](...args);\n\n\t\treturn object;\n\n\t}\n\n\tfunction applyRendererOptions (renderer, o) {\n\n\t\treturn Utils.merge(renderer, o);\n\n\t}\n\n\tfunction logMessage (message, type) {\n\n\t\t// be chatty if no proper options are set\n\t\tconst level = options.debugLevel !== undefined ? options.debugLevel : 3;\n\n\t\tswitch (type) {\n\n\t\t\tcase 'error':\n\n\t\t\t\tthrow message;\n\n\t\t\tcase 'warn':\n\n\t\t\t\tif (level > 0) {\n\n\t\t\t\t\tconsole.warn(message);\n\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'info':\n\n\t\t\t\tif (level > 2) {\n\n\t\t\t\t\tconsole.info(message);\n\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tif (level > 1) {\n\n\t\t\t\t\tconsole.log(message);\n\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction error (message) {\n\n\t\tlogMessage(message, 'error');\n\n\t}\n\n\tfunction warn (message) {\n\n\t\tlogMessage(message, 'warn');\n\n\t}\n\n\tfunction log (message) {\n\n\t\tlogMessage(message, 'log');\n\n\t}\n\n\tfunction info (message) {\n\n\t\tlogMessage(message, 'info');\n\n\t}\n\n\treturn {\n\n\t\tget canvas () {\n\n\t\t\treturn local.canvas;\n\n\t\t},\n\n\t\tget options () {\n\n\t\t\treturn options;\n\n\t\t},\n\n\t\tget THREE () {\n\n\t\t\treturn THREE;\n\n\t\t},\n\n\t\tget scene () {\n\n\t\t\treturn local.scene;\n\n\t\t},\n\n\t\tset scene (object) {\n\n\t\t\tlocal.scene = object;\n\n\t\t},\n\n\t\tget camera () {\n\n\t\t\treturn local.camera;\n\n\t\t},\n\n\t\tset camera (object) {\n\n\t\t\tlocal.camera = object;\n\n\t\t},\n\n\t\tget controls () {\n\n\t\t\treturn local.controls;\n\n\t\t},\n\n\t\tget renderer () {\n\n\t\t\treturn local.renderer;\n\n\t\t},\n\n\t\tget manager () {\n\n\t\t\treturn local.manager;\n\n\t\t},\n\n\t\tget collidables () {\n\n\t\t\treturn local.collidables;\n\n\t\t},\n\n\t\tset collidables (collidables) {\n\n\t\t\tlocal.collidables = collidables;\n\n\t\t},\n\n\t\tget draggableObject () {\n\n\t\t\treturn local.draggableObject;\n\n\t\t},\n\n\t\tset draggableObject (object) {\n\n\t\t\tlocal.draggableObject = object;\n\n\t\t},\n\n\t\tget draggables () {\n\n\t\t\treturn local.draggables;\n\n\t\t},\n\n\t\tset draggables (draggables) {\n\n\t\t\tlocal.draggables = draggables;\n\n\t\t},\n\n\t\tget mouse () {\n\n\t\t\treturn local.mouse;\n\n\t\t},\n\n\t\tset mouse (mouseVector2) {\n\n\t\t\tlocal.mouse = mouseVector2;\n\n\t\t},\n\n\t\tget movingLimits () {\n\n\t\t\treturn local.movingLimits;\n\n\t\t},\n\n\t\tset movingLimits (minMaxLimits) {\n\n\t\t\tlocal.movingLimits = minMaxLimits;\n\n\t\t},\n\n\t\tget raycaster () {\n\n\t\t\treturn local.raycaster;\n\n\t\t},\n\n\t\tset raycaster (raycaster) {\n\n\t\t\tlocal.raycaster = raycaster;\n\n\t\t},\n\n\t\tget actions () {\n\n\t\t\treturn local.actions;\n\n\t\t},\n\n\t\tinitSize: initSize,\n\t\tcreate: createObject,\n\t\terror: error,\n\t\twarn: warn,\n\t\tlog: log,\n\t\tinfo: info,\n\t\tinit: init,\n\t\trun: run\n\n\t};\n\n})();\n\nexport { App };\n", "import { App } from './app';\nimport { Utils } from '../utils';\n\nconst Material = (function () {\n\n\tfunction create (options) {\n\n\t\tif (!options) {\n\n\t\t\toptions = {\n\n\t\t\t\ttype: 'MeshPhongMaterial',\n\t\t\t\targs: [{ color: 0xffffff }]\n\n\t\t\t};\n\n\t\t\tApp.info('No options for material given, using default MeshPhongMaterial in white');\n\n\t\t}\n\n\t\tlet material = App.create(options);\n\n\t\tmaterial = change(material, options);\n\n\t\treturn material;\n\n\t}\n\n\tfunction change (object, options) {\n\n\t\tconst THREE = App.THREE;\n\n\t\tif (options.properties) {\n\n\t\t\tobject = applyProperties(object, options.properties);\n\n\t\t}\n\n\t\tif (options.methods) {\n\n\t\t\tobject = Utils.applyMethods(object, options.methods);\n\n\t\t}\n\n\t\tif (options.textures) {\n\n\t\t\toptions.textures.forEach(async texture => {\n\n\t\t\t\tconst loaderType = texture.loader || 'TextureLoader';\n\t\t\t\tconst loader = new THREE[loaderType](App.manager);\n\t\t\t\tconst mapType = texture.map;\n\t\t\t\tconst mapTexture = await loader.loadAsync(texture.url);\n\n\t\t\t\tobject[mapType] = mapTexture;\n\n\t\t\t\tif (texture.properties) {\n\n\t\t\t\t\tobject[mapType] = applyProperties(object[mapType], texture.properties);\n\n\t\t\t\t}\n\n\t\t\t\tif (texture.methods) {\n\n\t\t\t\t\tobject[mapType] = Utils.applyMethods(object, texture.methods);\n\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\tobject.needsUpdate = true;\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tfunction applyProperties (object, options) {\n\n\t\tconst THREE = App.THREE;\n\n\t\tif (!options || typeof options !== 'object') {\n\n\t\t\treturn object;\n\n\t\t}\n\n\t\tfor (const prop in options) {\n\n\t\t\tif (options[prop] instanceof Object) {\n\n\t\t\t\tobject[prop] = { ...options[prop] };\n\n\t\t\t} else {\n\n\t\t\t\tif (Utils.isThreeColorValue(prop)) {\n\n\t\t\t\t\tobject[prop] = new THREE.Color(options[prop]);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tobject[prop] = options[prop];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\treturn {\n\n\t\tcreate: create,\n\t\tchange: change\n\n\t};\n\n})(App);\n\nexport { Material };\n", "import { App } from './app';\nimport { Material } from './material';\nimport { Utils } from '../utils';\n\nconst UserData = (function () {\n\n\tfunction handle (object, userData) {\n\n\t\tconst f = {\n\n\t\t\tcollidable: (action) => addCollidables(object, action),\n\t\t\tdraggable: (action) => addDraggables(object, action),\n\t\t\tdragMaterial: (action) => createDragMaterial(object, action),\n\t\t\tmovingLimiter: (action) => setMovingLimits(object, action)\n\n\t\t};\n\n\t\tfor (const action in userData) {\n\n\t\t\tif (f[action]) {\n\n\t\t\t\tf[action](action);\n\n\t\t\t}\n\n\t\t}\n\n\t\tobject.userData = { ...object.userData, ...userData };\n\n\t}\n\n\tfunction setMovingLimits(object, action) {\n\n\t\tconst THREE = App.THREE;\n\t\tconst boundingBox = new THREE.Box3();\n\t\tboundingBox.setFromObject(object);\n\n\t\tApp.movingLimits = {\n\t\t\tmin: boundingBox.min,\n\t\t\tmax: boundingBox.max\n\t\t};\n\n\t}\n\n\tfunction createDragMaterial (object, action) {\n\n\t\treturn;\n\n\t}\n\n\tfunction addDraggables (object, action) {\n\n\t\tif (action) {\n\n\t\t\tApp.draggables.push(object);\n\n\t\t}\n\n\t}\n\n\tfunction addCollidables (object, action) {\n\n\t\tif (action) {\n\n\t\t\tApp.collidables.push(object);\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\thandle: handle\n\n\t};\n\n})(App);\n\nexport { UserData };\n", "import { App } from './app';\nimport { Utils } from '../utils';\nimport { UserData } from './userdata';\n\nconst Object3d = (function () {\n\n\tfunction add (options) {\n\n\t\tconst object3d = create(options);\n\n\t\tApp.scene.add(object3d);\n\n\t\treturn object3d;\n\n\t}\n\n\tfunction create (options) {\n\n\t\tconst THREE = App.THREE;\n\n\t\tconst args = Array.isArray(options.args) ? options.args : [];\n\t\tlet object = new THREE[options.type](...args);\n\n\t\tobject = change(object, options);\n\n\t\treturn object;\n\n\t}\n\n\tfunction change (object, options) {\n\n\t\tif (options.properties) {\n\n\t\t\tobject = applyProperties(object, options.properties);\n\n\t\t}\n\n\t\tif (options.methods) {\n\n\t\t\tobject = Utils.applyMethods(object, options.methods);\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tfunction applyProperties (object, options) {\n\n\t\tconst THREE = App.THREE;\n\n\t\tif (!options || typeof options !== 'object') {\n\n\t\t\treturn object;\n\n\t\t}\n\n\t\tfor (const prop in options) {\n\n\t\t\tif (options[prop] instanceof Object) {\n\n\t\t\t\t// prefer prototype \u00BBcopy\u00BB property before direct assignment\n\t\t\t\t// this handles non-writable object like Vectors, Euler, Quaternions etc.\n\t\t\t\tif (typeof object[prop] !== 'undefined' && 'copy' in object[prop]) {\n\n\t\t\t\t\t// a workaround for THREE.Euler which does use uderscored properties\n\t\t\t\t\t// in \u00BBcopy\u00AB method\n\t\t\t\t\tif ('toVector3' in object[prop] && 'setFromVector3' in object[prop]) {\n\n\t\t\t\t\t\tconst toVector3 = new THREE.Vector3();\n\t\t\t\t\t\ttoVector3.setFromEuler(object[prop]);\n\t\t\t\t\t\tconst mergedVector3 = { ...toVector3, ...options[prop] };\n\n\t\t\t\t\t\tobject[prop].setFromVector3(mergedVector3);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst v = { ...object[prop], ...options[prop] };\n\n\t\t\t\t\tobject[prop].copy(v);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif (prop === 'userData') {\n\n\t\t\t\t\t\tUserData.handle(object, options[prop]);\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject[prop] = applyProperties(object[prop], options[prop]);\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif (Utils.isThreeColorValue(prop)) {\n\n\t\t\t\t\tobject[prop] = new THREE.Color(options[prop]);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tobject[prop] = options[prop];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\treturn {\n\n\t\tadd: add,\n\t\tcreate: create,\n\t\tchange: change\n\n\t};\n\n})(App);\n\nexport { Object3d };\n", "import { App } from './app';\nimport { Object3d } from './object3d';\n\nconst Scene = (function () {\n\n\tfunction init () {\n\n\t\tconst options = App.options;\n\n\t\tApp.camera = initCamera(options.camera);\n\t\tApp.scene = initScene(options.scene);\n\n\t\tApp.initSize();\n\n\t}\n\n\tfunction initScene (options) {\n\n\t\tconst scene = Object3d.create(options);\n\n\t\t(async () => {\n\n\t\t\tscene.background = await createSceneTextures(options.background);\n\n\t\t\tscene.environment = await createSceneTextures(options.environment);\n\n\t\t})();\n\n\t\treturn scene;\n\n\t}\n\n\tfunction initCamera (options) {\n\n\t\tconst camera = Object3d.create(options);\n\n\t\tcamera.updateProjectionMatrix();\n\n\t\treturn camera;\n\n\t}\n\n\tasync function createSceneTextures (options) {\n\n\t\tif (!options) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst THREE = App.THREE;\n\n\t\tconst loaderType = options.loader || 'TextureLoader';\n\t\tconst loader = new THREE[loaderType](App.manager);\n\t\tconst texture = await loader.loadAsync(options.url);\n\n\t\treturn texture;\n\n\t}\n\n\treturn {\n\n\t\tinit: init\n\n\t};\n\n})(App);\n\nexport { Scene };\n", "import { App } from './app';\nimport { Object3d } from './object3d';\n\nconst Controls = (function () {\n\n\tfunction init (Controls, options) {\n\n\t\tApp.controls[Controls.name] = initControls(Controls, options);\n\n\t}\n\n\tfunction initControls (Controls, options) {\n\n\t\tlet controls = new Controls(App.camera, App.renderer.domElement);\n\t\tcontrols = Object3d.change(controls, options);\n\n\t\treturn controls;\n\n\t}\n\n\treturn {\n\n\t\tinit: init\n\n\t};\n\n})(App);\n\nexport { Controls };\n", "import { App } from './app';\n\nconst Loaders = (function () {\n\n\tconst Loaders = {};\n\n\tfunction init (LoaderClass) {\n\n\t\tLoaders[LoaderClass.name] = new LoaderClass(App.manager);\n\n\t}\n\n\tasync function load (options) {\n\n\t\tconst item = await Loaders[options.loader].loadAsync(options.url);\n\n\t\treturn item;\n\n\t}\n\n\treturn {\n\n\t\tinit: init,\n\t\tload: load\n\n\t};\n\n})(App);\n\nexport { Loaders };\n", "import { App } from './app';\nimport { Object3d } from './object3d';\n\nconst Light = (function () {\n\n\tfunction create (options) {\n\n\t\tconst light = Object3d.create(options);\n\n\t\treturn light;\n\n\t}\n\n\tfunction change (light, options) {\n\n\t\tlight = Object3d.change(light, options);\n\n\t\treturn light;\n\n\t}\n\n\tfunction add (options) {\n\n\t\tif (typeof options === 'object' && options.type) {\n\n\t\t\treturn addOne(options);\n\n\t\t}\n\n\t\tconst lights = [];\n\n\t\tif (Array.isArray(options)) {\n\n\t\t\toptions.forEach(option => {\n\n\t\t\t\tconst light = addOne(option);\n\n\t\t\t\tlights.push(light);\n\n\t\t\t});\n\n\t\t}\n\n\t\treturn lights;\n\n\t}\n\n\tfunction addOne (options) {\n\n\t\tconst light = create(options);\n\n\t\tApp.scene.add(light);\n\n\t\treturn light;\n\n\t}\n\n\treturn {\n\n\t\tadd: add,\n\t\tcreate: create,\n\t\tchange: change\n\n\t};\n\n})(App);\n\nexport { Light };\n", "import { App } from './app';\nimport { Utils } from '../utils';\n\nconst Geometry = (function () {\n\n\tfunction create (options) {\n\n\t\tif (!options) {\n\n\t\t\toptions = {\n\n\t\t\t\ttype: 'BoxGeometry',\n\t\t\t\targs: [1, 1, 1]\n\n\t\t\t};\n\n\t\t\tApp.info('No options for geometry given, using default BoxGeometry 1x1x1');\n\n\t\t}\n\n\t\tlet geometry = App.create(options);\n\n\t\tgeometry = Utils.merge(geometry, options.properties);\n\n\t\treturn geometry;\n\n\t}\n\n\treturn {\n\n\t\tcreate: create\n\n\t};\n\n})(App);\n\nexport { Geometry };\n", "import { App } from './app';\nimport { Object3d } from './object3d';\nimport { Material } from './material';\nimport { Geometry } from './geometry';\nimport { Loaders } from './loaders';\n\nconst Item = (function () {\n\n\tfunction create (options) {\n\n\t\tconst THREE = App.THREE;\n\n\t\tconst material = Material.create(options.material);\n\t\tconst geometry = Geometry.create(options.geometry);\n\n\t\tlet mesh = new THREE.Mesh(geometry, material);\n\t\tmesh = change(mesh, options);\n\n\t\treturn mesh;\n\n\t}\n\n\tfunction add (options) {\n\n\t\tif (typeof options === 'object') {\n\n\t\t\tif (options.loader) {\n\n\t\t\t\treturn addFromLoader(options);\n\n\t\t\t}\n\n\t\t\tif (options.geometry) {\n\n\t\t\t\treturn addMesh(options);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst items = [];\n\n\t\tif (Array.isArray(options)) {\n\n\t\t\toptions.forEach(option => {\n\n\t\t\t\tconst item = add(option);\n\n\t\t\t\titems.push(item);\n\n\t\t\t});\n\n\t\t}\n\n\t\treturn items;\n\n\t}\n\n\tasync function addFromLoader (options) {\n\n\t\tlet item = await Loaders.load(options);\n\n\t\tif (item.scene) {\n\n\t\t\tlet parent = wrapGroupParent(item.scene, options);\n\n\t\t\tparent = change(parent, options);\n\n\t\t\tparent.receiveShadow = false;\n\t\t\tparent.castShadow = false;\n\n\t\t\tApp.scene.add(parent);\n\n\t\t\treturn parent;\n\n\t\t} else {\n\n\t\t\titem = change(item, options);\n\n\t\t\tApp.scene.add(item);\n\n\t\t\treturn item;\n\n\t\t}\n\n\t}\n\n\tfunction wrapGroupParent (item, options) {\n\n\t\tconst THREE = App.THREE;\n\n\t\tconst box = new THREE.Box3().setFromObject(item);\n\n\t\tconst center = box.getCenter(new THREE.Vector3());\n\n\t\tconst offset = 0.001; // when clipping effects occur set this to 0.001\n\n\t\tconst dim = {\n\t\t\tx: box.max.x - box.min.x + offset,\n\t\t\ty: box.max.y - box.min.y + offset,\n\t\t\tz: box.max.z - box.min.z + offset\n\t\t};\n\n\t\tconst geo = new THREE.BoxGeometry(dim.x, dim.y, dim.z);\n\n\t\tif (!options.material) {\n\n\t\t\toptions.material = {\n\n\t\t\t\tcolor: 0xffffff,\n\t\t\t\ttransparent: true,\n\t\t\t\topacity: 0\n\n\t\t\t};\n\n\t\t}\n\n\t\tconst mat = new THREE.MeshBasicMaterial(options.material);\n\t\tconst mesh = new THREE.Mesh(geo, mat);\n\n\t\tmesh.position.y = (dim.y / 2);\n\t\titem.position.x += (item.position.x - center.x);\n\t\titem.position.y += (item.position.y - center.y);\n\t\titem.position.z += (item.position.z - center.z);\n\n\t\tmesh.renderOrder = 1;\n\n\t\titem.traverse(child => {\n\n\t\t\tif (child.isMesh) {\n\n\t\t\t\tchild.receiveShadow = options.properties.receiveShadow || false;\n\t\t\t\tchild.castShadow = options.properties.castShadow || false;\n\t\t\t\tchild.material.side = THREE.DoubleSide;\n\n\t\t\t}\n\n\t\t});\n\n\t\tmesh.add(item);\n\n\t\treturn mesh;\n\n\t}\n\n\tfunction addMesh (options) {\n\n\t\tconst mesh = create(options);\n\n\t\tApp.scene.add(mesh);\n\n\t\treturn mesh;\n\n\t}\n\n\tfunction change (object, options) {\n\n\t\tobject = Object3d.change(object, options);\n\n\t\tif (options.material) {\n\n\t\t\tMaterial.change(object.material, options.material);\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tfunction remove (object) {\n\n\t\tApp.collidables = App.collidables.filter(item => item !== object);\n\t\tApp.draggables = App.draggables.filter(item => item !== object);\n\n\t\tApp.scene.remove(object);\n\n\t}\n\n\treturn {\n\n\t\tadd: add,\n\t\tcreate: create,\n\t\tchange: change,\n\t\tremove: remove\n\n\t};\n\n})(App);\n\nexport { Item };\n", "import { App } from './app';\nimport { Material } from './material';\n\nconst Dragging = (function () {\n\n\tlet tmpMaterial = null;\n\tlet plane = null;\n\tlet planeNormal = null;\n\tlet pointIntersect = null;\n\tlet distance = null;\n\n\tfunction init () {\n\n\t\tconst THREE = App.THREE;\n\n\t\tplane = new THREE.Plane();\n\t\tplaneNormal = new THREE.Vector3(0, 1, 0);\n\t\tpointIntersect = new THREE.Vector3();\n\t\tdistance = new THREE.Vector3();\n\n\t}\n\n\tfunction start () {\n\n\t\tconst intersects = App.raycaster.intersectObjects(App.draggables);\n\n\t\tif (intersects.length <= 0) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tpointIntersect.copy(intersects[0].point);\n\n\t\tplane.setFromNormalAndCoplanarPoint(planeNormal, pointIntersect);\n\n\t\tdistance.subVectors(intersects[0].object.position, intersects[0].point);\n\n\t\tApp.draggableObject = intersects[0].object;\n\n\t\tApp.controls.OrbitControls.enabled = false;\n\n\t\tApp.actions.isDragging = true;\n\n\t\tApp.canvas.style.cursor = 'grab';\n\n\t\t// onDragStart callback\n    let  onDragStartCallback = App.draggableObject.userData?.callbacks?.onDragStart ?? (() => {});\n\n\t\t// run eval if it is a string\n    if (typeof App.draggableObject.userData?.callbacks?.onDragStart === 'string') {\n\n      onDragStartCallback = eval(App.draggableObject.userData.callbacks.onDragStart);\n\n    }\n\n\t\tonDragStartCallback(App);\n\n\t\tif (App.draggableObject.userData.dragMaterial) {\n\n\t\t\ttmpMaterial = App.draggableObject.material;\n\n\t\t\tApp.draggableObject.material = Material.create(App.draggableObject.userData.dragMaterial);\n\n\t\t}\n\n\t}\n\n\tfunction stop () {\n\n\t\tApp.controls.OrbitControls.enabled = true;\n\n\t\tApp.actions.isDragging = false;\n\n\t\tApp.canvas.style.cursor = 'auto';\n\n\t\tif (App.draggableObject) {\n\n\t\t\t// onDragStop callback\n      let onDragStopCallback = App.draggableObject.userData?.callbacks?.onDragStop ?? (() => {});\n\n\t\t\t// run eval if it is a cenverted function string\n      if (typeof App.draggableObject.userData?.callbacks?.onDragStop === 'string') {\n\n        onDragStopCallback = eval(App.draggableObject.userData.callbacks.onDragStop);\n\n      }\n\n\t\t\tonDragStopCallback(App);\n\n\t\t}\n\n\t\tif (App.draggableObject && App.draggableObject.userData.dragMaterial) {\n\n\t\t\tApp.draggableObject.material = tmpMaterial;\n\n\t\t\ttmpMaterial = null;\n\n\t\t}\n\n\t\tApp.draggableObject = null;\n\n\t}\n\n\tfunction drag () {\n\n\t\tif (App.actions.isDragging) {\n\n\t\t\tApp.draggableObject.position.addVectors(pointIntersect, distance);\n\n\t\t\tif (App.movingLimits !== null) {\n\n\t\t\t\tApp.movingLimits.min.y = App.draggableObject.position.y;\n\t\t\t\tApp.movingLimits.max.y = App.draggableObject.position.y;\n\t\t\t\tApp.draggableObject.position.clamp(App.movingLimits.min, App.movingLimits.max);\n\n\t\t\t}\n\n\t\t\tApp.raycaster.ray.intersectPlane(plane, pointIntersect);\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tinit: init,\n\t\tstart: start,\n\t\tdrag: drag,\n\t\tstop: stop\n\n\t};\n\n})();\n\nexport { Dragging };\n", "import { App } from './app';\nimport { Dragging } from './dragging';\n\nconst Events = (function () {\n\n\tasync function init () {\n\n\t\tconst THREE = App.THREE;\n\n\t\tApp.raycaster = App.raycaster ?? new THREE.Raycaster();\n\t\tApp.mouse = App.mouse ?? {};\n\n\t\tDragging.init(App.draggables);\n\n\t\tconst element = await App.renderer.domElement;\n\n\t\t element.addEventListener('mousemove', event => {\n\n\t\t\tonMouseMove(event);\n\n\t\t});\n\n\t\telement.addEventListener('mousedown', event => {\n\n\t\t\tonMouseDown(event);\n\n\t\t});\n\n\t\telement.addEventListener('mouseup', event => {\n\n\t\t\tonMouseUp(event);\n\n\t\t});\n\n\t}\n\n\tfunction onMouseDown (event) {\n\n\t\tDragging.start();\n\n\t}\n\n\tfunction onMouseUp () {\n\n\t\tDragging.stop();\n\n\t}\n\n\tfunction onMouseMove (event) {\n\n\t\tconst rect = App.canvas.getBoundingClientRect();\n\n\t\tApp.mouse.x = ((event.clientX - rect.left) / (rect.right - rect.left)) * 2 - 1;\n\t\tApp.mouse.y = -((event.clientY - rect.top) / (rect.bottom - rect.top)) * 2 + 1;\n\n\t\tApp.raycaster.setFromCamera(App.mouse, App.camera);\n\n\t\tDragging.drag();\n\n\t}\n\n\treturn {\n\n\t\tinit: init\n\n\t};\n\n})();\n\nexport { Events };\n", "import { App } from './app';\n\nconst Collision = (function () {\n\n\tfunction check (object) {\n\n\t\tconst THREE = App.THREE;\n\n\t\tlet collision = false;\n\n\t\tconst objectBox = new THREE.Box3().setFromObject(object);\n\n\t\tApp.collidables.forEach(collidable => {\n\n\t\t\tif (collidable === object) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst collidableBox = new THREE.Box3().setFromObject(collidable);\n\n\t\t\tif (objectBox.intersectsBox(collidableBox)) {\n\n\t\t\t\tcollision = true;\n\n\t\t\t}\n\n\t\t});\n\n\t\treturn collision;\n\n\t}\n\n\treturn {\n\n\t\tcheck: check\n\n\t};\n\n})(App);\n\nexport { Collision };\n", "import { KLEEVERSION } from './modules/constants';\n\nconsole.log('klee.js: ' + KLEEVERSION);\n\nexport * from './modules/constants';\nexport { App } from './modules/app';\nexport { Object3d } from './modules/object3d';\nexport { Scene } from './modules/scene';\nexport { Controls } from './modules/controls';\nexport { Loaders } from './modules/loaders';\nexport { Light } from './modules/light';\nexport { Item } from './modules/item';\nexport { Geometry } from './modules/geometry';\nexport { Material } from './modules/material';\nexport { Events } from './modules/events';\nexport { Dragging } from './modules/dragging';\nexport { Collision } from './modules/collisions';\n"],
  "mappings": "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",
  "names": []
}
